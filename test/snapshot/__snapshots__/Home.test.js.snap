// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders Home component 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Home
    attributes={
      Object {
        "list": Array [],
      }
    }
    doAuthorize={[Function]}
    goQRScannerIntro={[Function]}
    goToAttributesSummary={[Function]}
    goToPetitionSummary={[Function]}
    initializeState={[Function]}
    petitionLink={undefined}
    pinCode=""
    updatePin={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "behavior": "position",
      "children": <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#fff",
          }
        }
      >
        <Image
          source={1}
          style={
            Object {
              "height": 275,
              "marginBottom": 50,
              "marginTop": 75,
              "width": 320,
            }
          }
        />
        <View
          style={
            Object {
              "flexDirection": "row",
              "marginBottom": 20,
              "marginRight": 32,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "marginVertical": 10,
              }
            }
          >
            PIN:  
          </Text>
          <TextInput
            allowFontScaling={true}
            keyboardType="numeric"
            onChangeText={[Function]}
            placeholder=" Pin"
            secureTextEntry={true}
            style={
              Object {
                "alignItems": "center",
                "borderWidth": 1,
                "height": 35,
                "paddingHorizontal": 10,
                "width": 150,
              }
            }
            underlineColorAndroid="transparent"
            value=""
          />
        </View>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <Button
            enabled={true}
            name="Sign In"
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "width": 150,
              }
            }
          />
        </View>
      </View>,
      "keyboardVerticalOffset": 50,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Image
            source={1}
            style={
              Object {
                "height": 275,
                "marginBottom": 50,
                "marginTop": 75,
                "width": 320,
              }
            }
          />,
          <View
            style={
              Object {
                "flexDirection": "row",
                "marginBottom": 20,
                "marginRight": 32,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "marginVertical": 10,
                }
              }
            >
              PIN:  
            </Text>
            <TextInput
              allowFontScaling={true}
              keyboardType="numeric"
              onChangeText={[Function]}
              placeholder=" Pin"
              secureTextEntry={true}
              style={
                Object {
                  "alignItems": "center",
                  "borderWidth": 1,
                  "height": 35,
                  "paddingHorizontal": 10,
                  "width": 150,
                }
              }
              underlineColorAndroid="transparent"
              value=""
            />
          </View>,
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <Button
              enabled={true}
              name="Sign In"
              onPress={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "width": 150,
                }
              }
            />
          </View>,
        ],
        "style": Object {
          "alignItems": "center",
          "backgroundColor": "#fff",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "source": 1,
            "style": Object {
              "height": 275,
              "marginBottom": 50,
              "marginTop": 75,
              "width": 320,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "marginVertical": 10,
                  }
                }
              >
                PIN:  
              </Text>,
              <TextInput
                allowFontScaling={true}
                keyboardType="numeric"
                onChangeText={[Function]}
                placeholder=" Pin"
                secureTextEntry={true}
                style={
                  Object {
                    "alignItems": "center",
                    "borderWidth": 1,
                    "height": 35,
                    "paddingHorizontal": 10,
                    "width": 150,
                  }
                }
                underlineColorAndroid="transparent"
                value=""
              />,
            ],
            "style": Object {
              "flexDirection": "row",
              "marginBottom": 20,
              "marginRight": 32,
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "accessible": true,
                "allowFontScaling": true,
                "children": "PIN:  ",
                "ellipsizeMode": "tail",
                "style": Object {
                  "marginVertical": 10,
                },
              },
              "ref": null,
              "rendered": "PIN:  ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "allowFontScaling": true,
                "keyboardType": "numeric",
                "onChangeText": [Function],
                "placeholder": " Pin",
                "secureTextEntry": true,
                "style": Object {
                  "alignItems": "center",
                  "borderWidth": 1,
                  "height": 35,
                  "paddingHorizontal": 10,
                  "width": 150,
                },
                "underlineColorAndroid": "transparent",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Button
              enabled={true}
              name="Sign In"
              onPress={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "width": 150,
                }
              }
            />,
            "style": Object {
              "flexDirection": "row",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "enabled": true,
              "name": "Sign In",
              "onPress": [Function],
              "style": Object {
                "alignItems": "center",
                "width": 150,
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "behavior": "position",
        "children": <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#fff",
            }
          }
        >
          <Image
            source={1}
            style={
              Object {
                "height": 275,
                "marginBottom": 50,
                "marginTop": 75,
                "width": 320,
              }
            }
          />
          <View
            style={
              Object {
                "flexDirection": "row",
                "marginBottom": 20,
                "marginRight": 32,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "marginVertical": 10,
                }
              }
            >
              PIN:  
            </Text>
            <TextInput
              allowFontScaling={true}
              keyboardType="numeric"
              onChangeText={[Function]}
              placeholder=" Pin"
              secureTextEntry={true}
              style={
                Object {
                  "alignItems": "center",
                  "borderWidth": 1,
                  "height": 35,
                  "paddingHorizontal": 10,
                  "width": 150,
                }
              }
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <Button
              enabled={true}
              name="Sign In"
              onPress={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "width": 150,
                }
              }
            />
          </View>
        </View>,
        "keyboardVerticalOffset": 50,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Image
              source={1}
              style={
                Object {
                  "height": 275,
                  "marginBottom": 50,
                  "marginTop": 75,
                  "width": 320,
                }
              }
            />,
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "marginBottom": 20,
                  "marginRight": 32,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "marginVertical": 10,
                  }
                }
              >
                PIN:  
              </Text>
              <TextInput
                allowFontScaling={true}
                keyboardType="numeric"
                onChangeText={[Function]}
                placeholder=" Pin"
                secureTextEntry={true}
                style={
                  Object {
                    "alignItems": "center",
                    "borderWidth": 1,
                    "height": 35,
                    "paddingHorizontal": 10,
                    "width": 150,
                  }
                }
                underlineColorAndroid="transparent"
                value=""
              />
            </View>,
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <Button
                enabled={true}
                name="Sign In"
                onPress={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "width": 150,
                  }
                }
              />
            </View>,
          ],
          "style": Object {
            "alignItems": "center",
            "backgroundColor": "#fff",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "source": 1,
              "style": Object {
                "height": 275,
                "marginBottom": 50,
                "marginTop": 75,
                "width": 320,
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "marginVertical": 10,
                    }
                  }
                >
                  PIN:  
                </Text>,
                <TextInput
                  allowFontScaling={true}
                  keyboardType="numeric"
                  onChangeText={[Function]}
                  placeholder=" Pin"
                  secureTextEntry={true}
                  style={
                    Object {
                      "alignItems": "center",
                      "borderWidth": 1,
                      "height": 35,
                      "paddingHorizontal": 10,
                      "width": 150,
                    }
                  }
                  underlineColorAndroid="transparent"
                  value=""
                />,
              ],
              "style": Object {
                "flexDirection": "row",
                "marginBottom": 20,
                "marginRight": 32,
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "accessible": true,
                  "allowFontScaling": true,
                  "children": "PIN:  ",
                  "ellipsizeMode": "tail",
                  "style": Object {
                    "marginVertical": 10,
                  },
                },
                "ref": null,
                "rendered": "PIN:  ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "allowFontScaling": true,
                  "keyboardType": "numeric",
                  "onChangeText": [Function],
                  "placeholder": " Pin",
                  "secureTextEntry": true,
                  "style": Object {
                    "alignItems": "center",
                    "borderWidth": 1,
                    "height": 35,
                    "paddingHorizontal": 10,
                    "width": 150,
                  },
                  "underlineColorAndroid": "transparent",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Button
                enabled={true}
                name="Sign In"
                onPress={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "width": 150,
                  }
                }
              />,
              "style": Object {
                "flexDirection": "row",
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "enabled": true,
                "name": "Sign In",
                "onPress": [Function],
                "style": Object {
                  "alignItems": "center",
                  "width": 150,
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "context": Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
  },
}
`;
