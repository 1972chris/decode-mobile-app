// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders Button disabled 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  collapsable={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignSelf": "stretch",
      "backgroundColor": "rgba(0,163,158,0.4)",
      "borderRadius": 2,
      "elevation": 2,
      "height": 36,
      "marginBottom": 18,
      "marginHorizontal": 16,
      "marginTop": 10,
      "opacity": 1,
      "paddingHorizontal": 16,
      "paddingVertical": 8,
      "shadowColor": "rgba(0, 0, 0, 0.54)",
      "shadowOffset": Object {
        "height": 2,
        "width": 0,
      },
      "shadowOpacity": 0.8,
      "shadowRadius": 2,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Object {
        "alignSelf": "center",
        "color": "rgba(255, 255, 255, 0.6)",
        "fontSize": 16,
        "fontWeight": "500",
      }
    }
  >
    
  </Text>
</View>
`;

exports[`renders Button enabled 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  collapsable={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignSelf": "stretch",
      "backgroundColor": "rgb(0,163,158)",
      "borderRadius": 2,
      "elevation": 2,
      "height": 36,
      "marginBottom": 18,
      "marginHorizontal": 16,
      "marginTop": 10,
      "opacity": 1,
      "paddingHorizontal": 16,
      "paddingVertical": 8,
      "shadowColor": "rgba(0, 0, 0, 0.54)",
      "shadowOffset": Object {
        "height": 2,
        "width": 0,
      },
      "shadowOpacity": 0.8,
      "shadowRadius": 2,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Object {
        "alignSelf": "center",
        "color": "#FFF",
        "fontSize": 16,
        "fontWeight": "500",
      }
    }
  >
    
  </Text>
</View>
`;

exports[`renders Button with correct name 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  collapsable={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignSelf": "stretch",
      "backgroundColor": "rgb(0,163,158)",
      "borderRadius": 2,
      "elevation": 2,
      "height": 36,
      "marginBottom": 18,
      "marginHorizontal": 16,
      "marginTop": 10,
      "opacity": 1,
      "paddingHorizontal": 16,
      "paddingVertical": 8,
      "shadowColor": "rgba(0, 0, 0, 0.54)",
      "shadowOffset": Object {
        "height": 2,
        "width": 0,
      },
      "shadowOpacity": 0.8,
      "shadowRadius": 2,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Object {
        "alignSelf": "center",
        "color": "#FFF",
        "fontSize": 16,
        "fontWeight": "500",
      }
    }
  >
    A Name
  </Text>
</View>
`;
