// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders Walkthrough component 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Walkthrough
    goToPinSetup={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <View>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          >
            Walkthrough
          </Text>
        </View>,
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <Button
            enabled={true}
            name="Continue"
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "width": 150,
              }
            }
          />
        </View>,
      ],
      "style": Object {
        "alignSelf": "stretch",
        "backgroundColor": "#FFF",
        "margin": 16,
        "marginTop": 30,
        "paddingHorizontal": 20,
        "paddingVertical": 40,
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          >
            Walkthrough
          </Text>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "accessible": true,
            "allowFontScaling": true,
            "children": "Walkthrough",
            "ellipsizeMode": "tail",
          },
          "ref": null,
          "rendered": "Walkthrough",
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Button
            enabled={true}
            name="Continue"
            onPress={[Function]}
            style={
              Object {
                "alignItems": "center",
                "width": 150,
              }
            }
          />,
          "style": Object {
            "flexDirection": "row",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "enabled": true,
            "name": "Continue",
            "onPress": [Function],
            "style": Object {
              "alignItems": "center",
              "width": 150,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              Walkthrough
            </Text>
          </View>,
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <Button
              enabled={true}
              name="Continue"
              onPress={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "width": 150,
                }
              }
            />
          </View>,
        ],
        "style": Object {
          "alignSelf": "stretch",
          "backgroundColor": "#FFF",
          "margin": 16,
          "marginTop": 30,
          "paddingHorizontal": 20,
          "paddingVertical": 40,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              Walkthrough
            </Text>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "accessible": true,
              "allowFontScaling": true,
              "children": "Walkthrough",
              "ellipsizeMode": "tail",
            },
            "ref": null,
            "rendered": "Walkthrough",
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Button
              enabled={true}
              name="Continue"
              onPress={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "width": 150,
                }
              }
            />,
            "style": Object {
              "flexDirection": "row",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "enabled": true,
              "name": "Continue",
              "onPress": [Function],
              "style": Object {
                "alignItems": "center",
                "width": 150,
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "context": Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
  },
}
`;
